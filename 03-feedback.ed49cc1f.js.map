{"mappings":"iiBAYA,IAAAA,EAAAC,EAAA,SACMC,EAAY,sBAEZC,EAAOC,SAASC,cAAc,kBAEpCF,EAAKG,iBAAiB,QAASC,EAAAP,EAAA,EAM/B,SAAiBQ,GACbC,EAAW,CAAEC,MAAOC,EAAMC,MAAOC,QAASC,EAAQF,OAClDG,aAAaC,QAAQd,EAAWe,KAAKC,UAAUT,G,GARF,MACjDN,EAAKG,iBAAiB,UAUtB,SAAkBE,GACdA,EAAMW,iBACNC,QAAQC,IAAI,CAAEX,MAAOC,EAAMC,MAAOC,QAASC,EAAQF,SAEhC,KAAhBD,EAAMC,OAAkC,KAAlBE,EAAQF,QAC7BU,MAAM,2CAEVd,EAAMe,cAAcC,QACpBT,aAAaU,WAAWvB,GACxBO,EAAW,E,IAjBf,IAAIA,EAAWQ,KAAKS,MAAMX,aAAaY,QAAQzB,KAAe,GACnC0B,EAAAzB,EAAK0B,SAAxBlB,EAAmBiB,EAAnBlB,MAAOI,EAAYc,EAAZf,QAoBRJ,IACCE,EAAMC,MAAQH,EAASC,OAAS,GAChCI,EAAQF,MAAQH,EAASI,SAAW,G","sources":["src/js/03-feedback.js"],"sourcesContent":["\n// 1. Відстежуй на формі подію input, і щоразу записуй у локальне сховище об'єкт з полями email і message, у яких зберігай поточні значення полів форми. Нехай ключем для сховища буде рядок \"feedback-form-state\".\n// 2. Під час завантаження сторінки перевіряй стан сховища, і якщо там є збережені дані, заповнюй ними поля форми. В іншому випадку поля повинні бути порожніми.\n// 3. Під час сабміту форми очищуй сховище і поля форми, а також виводь у консоль об'єкт з полями email, message та їхніми поточними значеннями.\n// 4. Зроби так, щоб сховище оновлювалось не частіше, ніж раз на 500 мілісекунд. Для цього додай до проекту і використовуй бібліотеку lodash.throttle.\n\n\n// \"доброго вечора, у таску 8-3 якщо не заповнене одне або інше поле сабміт не робимо, а показуємо альорт, як у дз 6 таск 8\n// дз приймаю, але із дз 9 чекаю підправлену 8-3\"\n\n// \"Модуль 8 Таск 3 - при оновленні форми не мають підтягуватися дані вже з відправленого сабміту - підправте будь ласка\"\n\nimport throttle from 'lodash/throttle';\nconst LOCAL_KEY = 'feedback-form-state';\n\nconst form = document.querySelector('.feedback-form');\n\nform.addEventListener(\"input\", throttle(onInput, 500));\nform.addEventListener('submit', onSubmit);\n\nlet dataForm = JSON.parse(localStorage.getItem(LOCAL_KEY)) || {};\nconst { email, message } = form.elements;\n\nfunction onInput(event){\n    dataForm = { email: email.value, message: message.value };\n    localStorage.setItem(LOCAL_KEY, JSON.stringify(dataForm));\n}\n\nfunction onSubmit(event){\n    event.preventDefault();\n    console.log({ email: email.value, message: message.value });\n\n    if(email.value === \"\" || message.value === \"\"){\n        alert(\"Don't be lazy, fill up all the fields !\");\n    }\n    event.currentTarget.reset();\n    localStorage.removeItem(LOCAL_KEY);\n    dataForm = {};\n}\n\nfunction reloadPage() {\n    if(dataForm) {\n        email.value = dataForm.email || '';\n        message.value = dataForm.message || '';\n    }\n}\nreloadPage();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["$eaxEB","parcelRequire","$b00c40859be242c5$var$LOCAL_KEY","$b00c40859be242c5$var$form","document","querySelector","addEventListener","$parcel$interopDefault","event","$b00c40859be242c5$var$dataForm","email","$b00c40859be242c5$var$email","value","message","$b00c40859be242c5$var$message","localStorage","setItem","JSON","stringify","preventDefault","console","log","alert","currentTarget","reset","removeItem","parse","getItem","$b00c40859be242c5$var$_elements","elements"],"version":3,"file":"03-feedback.ed49cc1f.js.map"}